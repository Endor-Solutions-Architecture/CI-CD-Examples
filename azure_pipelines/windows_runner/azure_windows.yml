# .NET build pipeline
# Build and test a .NET project using Azure Pipelines
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

variables:
  - group: arsalan-learn-variable-group
  - name: solution
    value: 'MyApp/MyApp.csproj'
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '8.0.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: 'restore'
    projects: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- script: |
    curl -O https://api.endorlabs.com/download/latest/endorctl_windows_amd64.exe

    curl https://api.endorlabs.com/sha/latest/endorctl_windows_amd64.exe

    certutil -hashfile .\endorctl_windows_amd64.exe SHA256

    ren endorctl_windows_amd64.exe endorctl.exe

    .\endorctl.exe scan -n arsalan-learn -s scanresults.sarif --as-default-branch=true --detached-ref-name=main
    
  displayName: 'Endor Security Scan'
  env:
      ENDOR_API_CREDENTIALS_KEY: $(ENDOR_API_CREDENTIALS_KEY)
      ENDOR_API_CREDENTIALS_SECRET: $(ENDOR_API_CREDENTIALS_SECRET)

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'MyApp'
